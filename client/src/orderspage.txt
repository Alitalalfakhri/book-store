import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import { books } from "./data/books.js";
import orders from "./scripts/orders.js";
import axios from "axios";
import { useDispatch, useSelector } from "react-redux";
import { backendUrl } from "./constant.js";

export default function OrdersPage() {
  const navigate = useNavigate();

  const dispatch = useDispatch();

  const booksState = useSelector((state) => state.books);

  const user = useSelector((state) => state.user);

  // Initialize orderList state with orders.ordersArray and set up reactivity
  const [orderList, setOrderList] = useState([]); // Default to empty array if undefined

  useEffect(() => {
    if (!user.loggedIn) {
      return (
        <>
          <div style={{ marginTop: "60px" }}>
            <p style={{ fontSize: "3rem", color: "red" }}>
              please sign up or login to view orders
            </p>
            <button onClick={() => navigate("/signup")}>sign up</button>
          </div>
        </>
      );
    } else {

      const booksStorage = JSON.parse(localStorage.getItem("booksStorage"))

      const fetchData = async () => {

         const response = await axios.post(`${backendUrl}/api/orders`, {
          uid: user.uid,
        });        

        response.data.forEach(order => {
          order.itemsArray.map((item) => {
            const findBook = booksStorage.find((book) => book.id === item.bookId);

            if(findBook){
              item.name = findBook.name;
            }
            console.log(item)
          })
        })

       // console.log(response.data)
      };
      fetchData();
      orders.loadOrders();

      // Now that orders are loaded, set orderList state
      setOrderList(orders.ordersArray || [])
    }
  }, []); // Empty dependency array to run only once on component mount

  const buttonStyle = {
    padding: "12px 24px",
    fontSize: "1rem",
    color: "#fff",
    backgroundColor: "#ff7f11",
    border: "none",
    borderRadius: "5px",
    boxShadow: "0 6px 12px rgba(255, 127, 17, 0.4)",
    cursor: "pointer",
    transition: "transform 0.3s",
    outline: "none",
  };

  return (
    <>
      <div className="no-orders">
        {orderList.length === 0 ? (
          <h1 style={{ marginTop: "100px" }}>No orders yet!</h1>
        ) : (
          orderList.map((order) => (
            <div key={order.id} className="order-container">
              <table className="order-table">
                <thead>
                  <tr>
                    <th>Book Name</th>
                    <th>Quantity</th>
                    <th>Price</th>
                  </tr>
                </thead>
                <tbody>
                  {order.itemsArray.map((item) => {
                    const matchingItem = books.find(
                      (book) => book.id === item.bookId,
                    );
                    return (
                      <tr key={matchingItem.id}>
                        <td>{matchingItem ? matchingItem.name : "Unknown"}</td>
                        <td>{item.quantity}</td>
                        <td>
                          ${(matchingItem ? matchingItem.priceCents : 0) / 100}
                        </td>
                      </tr>
                    );
                  })}
                </tbody>
              </table>
              <h3>Total Price: ${order.price.toFixed(2)}</h3>
              <h3>Delivery Date: {order.date}</h3>
              <h3>Order ID: {order.id}</h3>
              <hr />
            </div>
          ))
        )}
        <button style={buttonStyle} onClick={() => navigate("/")}>
          Home
        </button>
      </div>
    </>
  );
}
